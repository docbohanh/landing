function getData(a) {
  return new Promise(function(b, c) {
    var d = new XMLHttpRequest;
    d.open("GET", a), d.onload = function() {
      200 === d.status ? b(d.response) : c(Error(d.statusText))
    }, d.onerror = function() {
      c(Error("Network Error"))
    }, d.send()
  })
}

function countProperties(a) {
  var b = 0;
  for (var c in a) a.hasOwnProperty(c) && ++b;
  return b
}

function setSections() {
  var a, b = JSON.parse(arguments[0]),
    c = 0,
    d = countProperties(b);
  for (var e in b) a = new Section(b[e]), "media" !== b[e].path && (a.render(c, d - MEDIA_SECTION.length), c++)
}

function setPopups() {
  var a = JSON.parse(arguments[0]);
  SECTIONS_DETAILS = a, getData(SECTIONMEDIA).then(setMedia, function(a) {
    console.error("Failed!", a)
  })
}

function setMedia() {
  var a = JSON.parse(arguments[0]);
  MEDIA_SECTION.push(a.news);
  for (var b = 0; b < MEDIA_SECTION.length; b++) {
    var c = new Media(MEDIA_SECTION[b]);
    c.render()
  }
  getData(SECTIONS_URL).then(setSections, function(a) {
    console.error("Failed!", a)
  })
}

function Media(a) {
  this.blogUrl = a.blog_url || "", this.path = a.path || "", this.description = a.description || "", this.title = a.title || "", this.previewImage = a.preview_image || "", this.categories = a.categories || "", this.internal_path = a.internal_path || "";
  var b = $('section[data-id="media"]'),
    c = b.find(".left h1"),
    d = b.find(".left .description"),
    e = b.find(".right-content");
  this.renderTitle = function() {
    c.html(this.title)
  }, this.renderDescription = function() {
    d.html(this.description)
  }, this.renderImage = function() {
    var a = "";
    a += "<figure class='preview-img'><img src='" + this.previewImage + "'></figure>", d.append(a)
  }, this.renderCategories = function() {
    var a = this.categories,
      b = "<h4>Why don't you check our latest articles here?</h4>";
    b += "<ul class='pictogram-above'>";
    for (var c in a) b += "<li><a href='http://" + this.blogUrl + "/#" + a[c].path + "' class='list-link " + a[c].path + "'>", void 0 !== a[c].icon && (b += '<span class="link-image" data-hover="' + a[c].icon + '" data-pictogram="' + a[c].icon + '"></span>'), b += "<span class='link-text'>" + a[c].name + "</span></a></li>";
    b += "</ul>", e.append(b)
  }, this.renderSimpleButton = function() {
    var a = b.find(".lower-description"),
      c = "";
    c = "<div class='buttons-wrap'><div class='content-button'><a href='http://" + this.blogUrl + this.internal_path + "' class='open-section-detail'><span>read more</span></a></div></div>", a.append(c)
  }, this.render = function() {
    this.renderTitle(), this.renderDescription(), this.renderImage(), this.renderCategories(), this.renderSimpleButton()
  }
}

function Section(a) {
  this.target_id = a.target_id || "", this.description = a.description || "", this.title = a.title || "", this.path = a.path || "", this.right_half_picture = a.right_half_picture || "", this.paragraphs = [];
  var b = !1,
    c = $("section").find("div." + this.path),
    d = $("section").find("aside." + this.path),
    e = c.find("h1"),
    f = c.find(".description"),
    g = d.find(".background");
  this.generateParagraphs = function() {
    this.paragraphs.push({
      parent: this.path,
      options: a.paragraphs || ""
    })
  }, this.titleRender = function() {
    e.html(this.title)
  }, this.descriptionRender = function() {
    f.html(this.description)
  }, this.imageRender = function() {
    g.css({
      "background-image": "url(" + this.right_half_picture + ")"
    })
  }, this.lowerDescriptionRender = function(a, b) {
    var a = $("." + a),
      c = a.find($(".lower-description"));
    c.html(b)
  }, this.generateButtonsList = function(a, b) {
    for (var c = 0; c < a.length; c++) b += void 0 !== a[c].description ? "<li><a href='" + a[c].path + "' class='list-link " + a[c].path + "'>" : "<li class='not-active'><a href='javascript:;' class='list-link not-active " + a[c].path + "'>", void 0 !== a[c].pictogram && (b += '<span class="link-image" data-hover="' + a[c].active_pictogram + '" data-pictogram="' + a[c].pictogram + '"></span>'), b += "<span class='link-text'>" + a[c].title + "</span></a></li>";
    return b += "</ul>"
  }, this.generateSimpleTextList = function(a, b) {
    for (var c = 0; c < a.length; c++) b += "<li>", void 0 !== a[c].pictogram && (b += '<span class="link-image" style="background-image: url(' + a[c].pictogram + ')"></span>'), b += a[c].title + "</li>";
    return b += "</ul>"
  }, this.generateTableTemplate = function(a, b, c, d) {
    var e = "",
      f = "";
    switch (d) {
      case "table":
        switch (c) {
          case "hide_pictogram":
            f += b ? "<ul class='type-table links-list'>" : "<ul class='type-table'>";
            break;
          case "left":
            f += "<ul class='with-icons type-table links-list'>";
            break;
          case "above":
            f += "<ul class='pictogram-above'>"
        }
        break;
      case "list":
        f += "<ul class='type-list'>";
        break;
      default:
        console.warn("TYPE NOT HANDLED")
    }
    switch (b) {
      case !0:
        e = this.generateButtonsList(a, f);
        break;
      case !1:
        e = this.generateSimpleTextList(a, f);
        break;
      default:
        console.warn("should not exist")
    }
    return e
  }, this.generateSliderTemplate = function(a) {
    var b = "";
    b = "<div class='slider'>";
    for (var c = 0; c < a.length; c++) a.length > 3 ? c % 3 === 0 && (b += "<div>") : b += "<div>", b += "<div class='client-wrap'>", b += void 0 !== a[c].description ? "<a href='" + a[c].path + "' class='client " + a[c].path + "'>" : "<a href='javascript:;' class='client not-active " + a[c].path + "'>", void 0 !== a[c].pictogram && (b += '<span class="link-image" data-hover="' + a[c].active_pictogram + '" data-pictogram="' + a[c].pictogram + '"></span>'), b += "<span class='link-text'>" + a[c].title + "</span>", b += "</a></div>", a.length > 3 ? c % 3 === 2 && (b += "</div>") : b += "</div>";
    return b += "</div>"
  }, this.lowerParaghrapsRrender = function(a, b, c, d) {
    for (var a = $("." + a), e = a.find($(".lower-description")), f = !1, g = 0; g < b.items.length; g++)
      if (void 0 !== b.items[g].description) {
        f = !0;
        break
      }
    e.append("<h3>" + b.title + "</h3>"), e.append(this.generateTableTemplate(b.items, f, d, c))
  }, this.rightParaghraphsRender = function(a, b, c, d, e) {
    for (var f = $("." + a), g = f.find(".right-wrap .right-content"), h = !1, i = 0; i < b.items.length; i++)
      if (void 0 !== b.items[i].description) {
        h = !0;
        break
      }
    switch (g.append("<h4>" + b.title + "</h4>"), e) {
      case "1":
        g.append(this.generateSliderTemplate(b.items));
        break;
      case "0":
        g.append(this.generateTableTemplate(b.items, h, d, c));
        break;
      default:
        console.warn("should not exist")
    }
  }, this.rightActionsRender = function(a, b, c, d) {
    var e = $("." + a),
      f = e.find(".right-wrap .right-content"),
      g = "";
    switch (c) {
      case "complex":
        g += '<div id="become-client"><div class="mobile-wrap"><div class="content-button"><a href="contact"><span>' + b + '</span></a></div><div class="call-to-action"><h3>Do you want to be one of them?</h3></div></div></div>';
        break;
      case "simple":
        break;
      default:
        console.warn("should not exist")
    }
    f.append(g)
  }, this.setSingleButton = function(a, b) {
    var c = b[0].target_id,
      d = SECTIONS_DETAILS,
      e = d[c].path;
    return '<div class="buttons-wrap"><div class="content-button"><a href="' + e + '" class="open-section-detail"><span>' + a + "</span></a></div></div>"
  }, this.setTable = function(a, b) {
    var c = {};
    c.title = a, c.items = [];
    for (var d = 0; d < b.length; d++) {
      var e = b[d].target_id;
      c.items.push(SECTIONS_DETAILS[e])
    }
    return c
  }, this.sd_list = function(a, b) {
    var c = b.title,
      d = b.positioning,
      e = b.list_type,
      f = b.pictogram_position,
      g = b.slider,
      h = b.section_details,
      d = b.positioning;
    if ("left" === d) switch (e) {
      case "single":
        this.lowerDescriptionRender(a, this.setSingleButton(c, h));
        break;
      case "table":
        this.lowerParaghrapsRrender(a, this.setTable(c, h), "table", f);
        break;
      case "list":
        this.lowerParaghrapsRrender(a, this.setTable(c, h), "list");
        break;
      default:
        console.warn("should not exist")
    }
    if ("right" === d) switch (e) {
      case "table":
        this.rightParaghraphsRender(a, this.setTable(c, h), "table", f, g);
        break;
      case "list":
        break;
      case "single":
    }
  }, this.contact = function(a, b) {
    var c = b.active,
      d = b.title,
      e = b.positioning,
      f = b.type;
    switch (e) {
      case "right":
        this.rightActionsRender(a, d, f, c);
        break;
      case "left":
        break;
      default:
        console.warn("should not exist")
    }
  }, this.paragraphDisplay = function() {
    for (var a = this.paragraphs, b = a.length, c = 0; c < b; c++)
      for (var d = a[c].parent, e = a[c].options, f = 0; f < e.length; f++) switch (e[f].paragraph_type) {
        case "sd_list":
          this.sd_list(d, e[f]);
          break;
        case "contact":
          this.contact(d, e[f]);
          break;
        case "cta_form":
          break;
        default:
          console.warn("should not exist")
      }
  }, this.render = function(a, c) {
    b || (this.titleRender(), this.descriptionRender(), this.imageRender(), this.paragraphDisplay(), b = !0, a === c - 1 && $(document).trigger("allRenderDone"))
  }, this.generateParagraphs()
}

function particles() {
  // particlesJS.load("landing", "js/particles-old.json")
}

function setTransition(a, b) {
  a.css({
    "-webkit-transition": "transform " + b + "s ease-in-out",
    "-webkit-transition": "-webkit-transform " + b + "s ease-in-out",
    "-moz-transition": "transform " + b + "s ease-in-out",
    "-o-transition": "transform " + b + "s ease-in-out",
    transition: "transform " + b + "s ease-in-out"
  })
}

function setTranslate(a, b, c, d) {
  a.css({
    "-webkit-transform": "translate3d(" + b + "px, " + c + "px, " + d + "px)",
    "-ms-transform": "translate3d(" + b + "px, " + c + "px, " + d + "px)",
    "-moz-transform": "translate3d(" + b + "px, " + c + "px, " + d + "px)",
    "-o-transform": "translate3d(" + b + "px, " + c + "px, " + d + "px)",
    transform: "translate3d(" + b + "px, " + c + "px, " + d + "px)"
  })
}

function landingFadeIn() {
  $landingTitle.addClass("fade-in"), $landingButton.addClass("fade-in")
}

function changeLanding() {
  return $landingButton.off("click").on("click", function() {
    scrollUpLanding(), window.history.pushState($firstSection.attr("data-id"), "", $firstSection.attr("data-id"))
  }), !1
}

function getCurrentSection() {
  var a;
  return $left.each(function(b, c) {
    0 === parseInt($(c).attr("offset")) && (a = b)
  }), a
}

function setInitialPositions() {
  $(window).width() > mobileBreakPoint && $left.each(function(a, b) {
    var c = a * $(window).height();
    $(b).attr("offset", c), setTranslate($(b), 0, c, 0)
  })
}

function resizeToDesktop() {
  changingSection = !0, $main.outerHeight("100vh"), setTimeout(function() {
    window.pJSDom[0].pJS.fn.vendors.start()
  }, 100);
  var a = $(".current"),
    b = a.index();
  $landing.css({
    "z-index": "-1",
    position: "fixed",
    top: "0",
    bottom: "0"
  }), setTranslate($landing, 0, -$(window).outerHeight(), 0), 0 === b ? (setTimeout(function() {
    scrollDownLanding(), setInitialPositions(), initScrollProgress()
  }, 500), landingIsActive = !0) : (setTimeout(function() {
    $left.each(function(a, c) {
      var d = a - b + 1,
        e = d * $(window).outerHeight();
      $(c).attr("offset", e), setTranslate($(c), 0, e, 0), 0 == d ? (initScrollProgress(), changeScrollProgress(0, a), $(this).next(".right").removeClass("mobile").addClass("fade-in")) : $(this).next(".right").removeClass("mobile").addClass("fade-out")
    })
  }, 500), landingIsActive = !1), a.removeClass("current"), lastScrollTop = window.pageYOffset, setTimeout(function() {
    changingSection = !1
  }, 500)
}

function resizeRecalculateTranslate() {
  $(window).on("resize", _.throttle(function(a) {
    if ($(window).width() > mobileBreakPoint) {
      changingSection = !0;
      var b = $(window).outerHeight(),
        c = b - windowHeight;
      landingIsActive || setTranslate($landing, 0, -b, 0), $left.each(function(a) {
        var b = parseInt($(this).attr("offset"));
        $(this).attr("offset") < 0 ? b -= c * Math.round(Math.abs(b) / windowHeight) : $(this).attr("offset") > 0 && (b += c * Math.round(Math.abs(b) / windowHeight)), $(this).attr("offset", b), setTranslate($(this), 0, b, 0)
      });
      var d = 0,
        e = parseFloat(($scrollBar.outerHeight() / numberOfSections * 100 / 100).toFixed(2));
      d = parseFloat(((getCurrentSection() - numberOfSections + 1) * e * 100 / 100).toFixed(2)), $scrollBar.attr("offset", d), setTranslate($scrollBar, scrollTranslateValX, d, 0), parseFloat($rightOverlay.css("top")) > 0 ? $rightOverlay.css("top", b) : parseFloat($rightOverlay.css("top")) < 0 && $rightOverlay.css("top", -$rightOverlay.outerHeight() - 50), windowHeight = b, setTimeout(function() {
        changingSection = !1
      }, 500)
    }
  }, 1e3))
}

function initScrollProgress() {
  var a = parseFloat(($scrollBar.outerHeight() / numberOfSections * 100 / 100).toFixed(2)),
    b = parseFloat((100 * (-$scrollBar.outerHeight() + a) / 100).toFixed(2));
  $scrollBar.attr("offset", b), setTranslate($scrollBar, scrollTranslateValX, b, 0)
}

function changeScrollProgress(a, b) {
  var c = parseFloat(($scrollBar.outerHeight() / numberOfSections * 100 / 100).toFixed(2));
  if (a < b) {
    var d = parseFloat((100 * (parseFloat($scrollBar.attr("offset")) + (b - a) * c) / 100).toFixed(2));
    setTranslate($scrollBar, scrollTranslateValX, d, 0)
  } else if (a > b) {
    var d = parseFloat((100 * (parseFloat($scrollBar.attr("offset")) - (a - b) * c) / 100).toFixed(2));
    setTranslate($scrollBar, scrollTranslateValX, d, 0)
  }
  $scrollBar.attr("offset", d)
}

function changeRightSection(a, b, c) {
  var d = a.next($right),
    e = $right.not(d),
    f = $right.eq(b).children(".background"),
    g = $rightOverlay.outerHeight(),
    h = 2.5 * g;
  e.removeClass("fade-in").addClass("fade-out"), d.removeClass("fade-out").addClass("fade-in"), f.addClass("zoom-out"), setTimeout(function() {
    f.removeClass("zoom-out")
  }, duration), b < c ? $rightOverlay.css({
    top: -g,
    visibility: "visible"
  }).animate({
    top: $(window).height(),
    height: h
  }, duration - 100, function() {
    $(this).css({
      height: g,
      visibility: "hidden"
    })
  }) : b > c && $rightOverlay.css({
    top: $(window).height(),
    height: h,
    visibility: "visible"
  }).animate({
    top: -g,
    height: g
  }, duration - 100, function() {
    $(this).css({
      height: g,
      visibility: "hidden"
    })
  })
}

function changeLeftSection(a, b) {
  if ($(window).width() > mobileBreakPoint) {
    var c = $("#_sections > section")[b];
    window.history.replaceState($(c).attr("data-id"), "", $(c).attr("data-id"))
  }
  changingSection = !0;
  var d = Math.abs(a - b) / 5 + 1;
  a < b ? $left.each(function(c, e) {
    var f = parseInt($(e).attr("offset")) - (b - a) * $(window).outerHeight();
    setTranslate($(e), 0, f, 0), setTransition($(e), d), 0 === f ? ($(e).css({
      opacity: 1
    }), changeRightSection($(e), a, b)) : $(e).animate({
      opacity: .3
    }, 500 * d, function() {
      c === b - 1 && setTimeout(function() {
        changingSection = !1
      }, 200)
    }), $(e).attr("offset", f)
  }) : a >= b && $left.each(function(c, e) {
    var f = parseInt($(e).attr("offset")) + (a - b) * $(window).outerHeight();
    setTranslate($(e), 0, f, 0), setTransition($(e), d), 0 === f ? ($(e).css({
      opacity: 1
    }), changeRightSection($(e), a, b)) : $(e).animate({
      opacity: .3
    }, 500 * d, function() {
      c === $left.length - 1 && setTimeout(function() {
        changingSection = !1
      }, 200)
    }), $(e).attr("offset", f)
  })
}

function scrollUp() {
  var a = getCurrentSection(),
    b = a - 1;
  b !== -1 && (changeLeftSection(a, b), changeScrollProgress(a, b))
}

function scrollDown() {
  var a = getCurrentSection(),
    b = a + 1;
  changeLeftSection(a, b), changeScrollProgress(a, b)
}

function scrollUpLanding() {
  setTranslate($landing, 0, -$(window).height(), 0), setTimeout(function() {
    // pJSDom[0].pJS.particles.move.enable = !1, $landing.css({
    //   visibility: "hidden"
    // })
  }, 1200), setTimeout(function() {
    landingIsActive = !1
  }, 200)
}

function scrollDownLanding() {
  window.history.replaceState(".", "", "."), landingIsActive = !0, $landing.css({
    visibility: "visible",
    "z-index": "200"
  }), setTimeout(function() {
    // pJSDom[0].pJS.particles.move.enable = !0, pJSDom[0].pJS.fn.particlesRefresh()
  }, 200), setTranslate($landing, 0, 0, 0)
}

function scrollWheel() {
  $htmlBody.unbind("wheel mousewheel DOMMouseScroll").bind("wheel mousewheel DOMMouseScroll", _.throttle(function(a) {
    var b = a.originalEvent.detail ? a.originalEvent.detail * -120 : a.originalEvent.wheelDelta ? a.originalEvent.wheelDelta : 120 * a.deltaY;
    $menu.hasClass("is-opened") || $sectionDetail.hasClass("is-opened") || insideScrollableArea || !($(window).width() > mobileBreakPoint) || changingSection || (isFirefox === -1 ? b / 120 > 0 ? "0" !== $left.attr("offset") || landingIsActive ? scrollUp() : scrollDownLanding() : landingIsActive ? (scrollUpLanding(), $firstSection = $("#_sections").find(">section").first(), window.history.pushState($firstSection.attr("data-id"), "", $firstSection.attr("data-id"))) : "0" !== $left.eq(numberOfSections - 1).attr("offset") && scrollDown() : a.deltaY >= 1 ? "0" !== $left.attr("offset") || landingIsActive ? scrollUp() : scrollDownLanding() : landingIsActive ? (scrollUpLanding(), window.history.pushState($firstSection.attr("data-id"), "", $firstSection.attr("data-id"))) : "0" !== $left.eq(numberOfSections - 1).attr("offset") && scrollDown())
  }, duration, {
    trailing: !1
  }))
}

function scrollTouch() {
  var a;
  $main.unbind("touchstart").bind("touchstart", _.throttle(function(b) {
    a = b.originalEvent.touches[0].clientY
  }, duration, {
    trailing: !1
  })), $main.unbind("touchmove").bind("touchmove", _.throttle(function(b) {
    var c = b.originalEvent.changedTouches[0].clientY;
    $menu.hasClass("is-opened") || $sectionDetail.hasClass("is-opened") || insideScrollableArea || !($(window).width() > mobileBreakPoint) || changingSection || (a < c ? "0" !== $left.attr("offset") || landingIsActive ? scrollUp() : scrollDownLanding() : landingIsActive ? scrollUpLanding() : "0" !== $left.eq(numberOfSections - 1).attr("offset") && scrollDown())
  }, duration, {
    trailing: !1
  }))
}

let $closeMenuBtn = $('.overlay-close');

function menuNavigation() {
  return $menuItemsWrap.off("click").on("click", ".menu-item-full", function() {
    if ($(window).width() > mobileBreakPoint) {
      $closeMenuBtn.trigger('click');

      var a = $(this).index(),
        b = getCurrentSection();
      a !== b && (changeLeftSection(b, a), changeScrollProgress(b, a)), $menu.removeClass("is-opened"), $menuOverlay.removeClass("is-opened");
      var c = $("#_sections > section")[a];
      setTimeout(function() {
        window.history.pushState($(c).attr("data-id"), "", $(c).attr("data-id"))
      }, 100)
    }
  }), !1
}

function setContentHeight() {
  var a = $(window).height() - 2 * $mainMenu.outerHeight();
  $(window).width() > mobileBreakPoint && $sectionWrap.each(function() {
    $(this).css("height", a)
  }), $(window).on("resize", function() {
    if ($(window).width() > mobileBreakPoint) {
      var a = $(window).height() - 2 * $mainMenu.outerHeight();
      $sectionWrap.each(function() {
        $(this).css("height", a)
      })
    }
  })
}

function nextSectionButton() {
  var a = $(".left .next-section-button");
  a.off("click").on("click", function(a) {
    return a.preventDefault(), scrollDown(), !1
  })
}

function mobileToggleScroll(a) {
  $(window).width() <= mobileBreakPoint && (a ? $htmlBody.addClass("noscroll") : $htmlBody.removeClass("noscroll"))
}

function iOSMenuDisableScroll() {
  $(window).on("touchmove", function(a) {
    for (var b = !0, c = a.target; null !== c;) {
      if (c.classList && c.classList.contains("disable-scroll")) {
        b = !1;
        break
      }
      c = c.parentNode
    }
    b || a.preventDefault()
  })
}

function openMainMenu() {
  $openMenuButton.off("click").on("click", function(a) {
    return $(window).width() <= mobileBreakPoint && $("body").addClass("disable-scroll"), a.preventDefault(), $menu.addClass("is-opened"), $menuOverlay.addClass("is-opened"), mobileToggleScroll(!0), !1
  })
}

function closeMainMenu() {
  $closeMenuButton.off("click").on("click", function(a) {
    $("body").removeClass("disable-scroll"), a.preventDefault(), $menu.removeClass("is-opened"), $menuOverlay.removeClass("is-opened"), mobileToggleScroll(!1)
  }), $menuOverlay.off("click").on("click", function(a) {
    return $("body").removeClass("disable-scroll"), a.preventDefault(), $menu.removeClass("is-opened"), $menuOverlay.removeClass("is-opened"), mobileToggleScroll(!1), !1
  })
}

function openSection() {}

function iOSEnableSectionScroll() {
  var a = ".is-opened .scroll-bar";
  $(document).on("touchmove", function(a) {
    a.preventDefault()
  }), $("body").on("touchstart", a, function(a) {
    scrolling || (scrolling = !0, 0 === a.currentTarget.scrollTop ? a.currentTarget.scrollTop = 1 : a.currentTarget.scrollHeight === a.currentTarget.scrollTop + a.currentTarget.offsetHeight && (a.currentTarget.scrollTop -= 1), scrolling = !1)
  }), $("body").on("touchmove", a, function(a) {
    $(this)[0].scrollHeight > $(this).innerHeight() && a.stopPropagation()
  })
}

function iOSDisableSectionScroll() {
  $(document).off("touchmove"), $("body").off("touchmove touchstart", ".is-opened .scroll-bar")
}

function closeSection() {
  $closeSectionDetail.on("click", function() {
    var a = $("section.is-opened");
    doCloseSection(a)
  }), $(document).keyup(function(a) {
    if (a.preventDefault(), 27 == a.keyCode && 2 === window.history.state.split("/").length) {
      var b = $("section.is-opened");
      doCloseSection(b)
    }
  })
}

function doCloseSection(a) {
  a.css({
    "-webkit-transform": "translate3d(0, 120%, 0)",
    "-webkit-transform": "-webkit-translate3d(0, 120%, 0)",
    "-ms-transform": "translate3d(0, 120%, 0)",
    "-moz-transform": "translate3d(0, 120%, 0)",
    "-o-transform": "translate3d(0, 120%, 0)",
    transform: "translate3d(0, 120%, 0)"
  }), a.removeClass("is-opened");
  var b = window.history.state.split("/");
  return $(window).width() <= mobileBreakPoint && $("html, body").animate({
    scrollTop: $('[data-id="' + b[0] + '"]').offset().top
  }, 10), setTimeout(function() {
    a.css({
      visibility: "hidden"
    })
  }, 1e3), a.find(".section-detail-wrap").delay(1e3).animate({
    scrollTop: 0
  }, 700), setTimeout(function() {
    window.history.back()
  }, 500), a.find(".section-detail-wrap").delay(1500).animate({
    scrollTop: 0
  }, 700), iOSDisableSectionScroll(), window.scrollTo(0, sectionScrollTop), window.setTimeout(function() {
    sectionScrollTop = null
  }, 0), mobileToggleScroll(!1), !1
}

function addScrollBarToSection() {
  setTimeout(function() {
    $sectionWrap.each(function() {
      if ($(this).jScrollPane({
          contentWidth: "0px"
        }), 0 === $(this).find(".jspVerticalBar").length) {
        var a = $(this).find(".jspPane");
        a.css({
          top: "auto",
          left: "auto"
        })
      }
      var b, c = $(this).data("jsp");
      $(window).on("resize", function() {
        $(window).width() > mobileBreakPoint && (b || (b = setTimeout(function() {
          c && (c.reinitialise(), b = null)
        }, 50)))
      })
    });
    var a = $(".left .content-wrap.jspScrollable");
    a.on("mouseover touchstart", function() {
      insideScrollableArea = !0
    }), a.on("mouseout touchend", function() {
      insideScrollableArea = !1
    })
  }, 100)
}

function addScrollBarToSectionDetail() {
  $sectionDetailWrap.each(function() {
    $(this).find($sectionDetailContent).outerHeight() > $(window).height() && $(this).addClass("scroll-bar")
  })
}

function addDotOurStory() {
  var a = $("#timeline .timeline-left"),
    b = $("#timeline .timeline-right"),
    c = a.find(".timeline-entry:last-of-type"),
    d = b.find(".timeline-entry:last-of-type");
  a.outerHeight() > b.outerHeight() ? c.addClass("dot") : d.addClass("dot")
}

function becomeClientNavigation() {
  var a = $("#become-client .content-button"),
    b = $(".section-detail.client .content-button"),
    c = numberOfSections - 1;
  a.on("click", function() {
    var a = getCurrentSection();
    return changeLeftSection(a, c), changeScrollProgress(a, c), !1
  }), b.on("click", function() {
    var a = getCurrentSection();
    return setTimeout(function() {
      changeLeftSection(a, c)
    }, 500), setTimeout(function() {
      changeScrollProgress(a, c)
    }, 500), !1
  })
}

function showNewsletter() {
  var a = $("#subscribe-newsletter"),
    b = a.find(".mobile-wrap"),
    c = a.find(".mobile-wrap-form"),
    d = b.find("a"),
    e = c.find("a");
  d.off("click").on("click", function() {
    b.css({
      display: "none"
    }), c.css({
      display: "block"
    })
  }), e.off("click").on("click", function() {
    $(this).closest("form").submit()
  })
}

function submitNewsletter() {
  var a = $("#newsletter-form"),
    b = $("#subscribe-newsletter"),
    c = b.find(".mobile-wrap"),
    d = b.find(".mobile-wrap-form");
  a.off("submit").on("submit", function(a) {
    a.preventDefault();
    var e = $(this).serializeFormJSON();
    $(this).valid() && $.ajax({
      type: "POST",
      url: NEWSLETTER_FORM_URL,
      data: JSON.stringify(e),
      contentType: "application/json"
    }).done(function(a) {
      var e = b.find(".call-to-action");
      e.html('<h3 class="' + a.status + '">' + a.message + "</h3>"), c.css("display", "flex"), d.css("display", "none")
    }).fail(function(a, e, f) {
      var g = a.responseJSON.message,
        h = b.find(".call-to-action");
      h.html("<h3>" + g + "</h3>"), c.css("display", "flex"), d.css("display", "none")
    }).always(function() {
      var a = $("#newsletter-form");
      a[0].reset()
    })
  })
}

function sliders() {
  var a = $(".slider");
  a.each(function(a) {
    $(this).slick({
      dots: !1,
      infinite: !1,
      speed: 600,
      slidesToShow: 3,
      slidesToScroll: 1,
      responsive: [{
        breakpoint: 769,
        settings: {
          slidesToShow: 2
        }
      }, {
        breakpoint: 321,
        settings: {
          slidesToShow: 1
        }
      }]
    })
  }), a.on("mouseover touchstart", function() {
    insideScrollableArea = !0
  }), a.on("mouseout touchend", function() {
    insideScrollableArea = !1
  })
}

function radioButtons() {
  var a = $(".btn-group label");
  a.off("click").on("click", function() {
    var a = $(this).find("input");
    a.checked = !0, $(this).siblings().removeClass("active"), $(this).addClass("active")
  })
}

function hoverPictograms() {
  var a = $("[data-pictogram]"),
    b = a.parent();
  b.hover(function() {
    var a = $(this).find(".link-image");
    void 0 !== a.attr("data-hover") ? a.css("background-image", "url(" + a.attr("data-hover") + ")") : a.css("background-image", "url(" + a.attr("data-pictogram") + ")")
  }, function() {
    var a = $(this).find(".link-image");
    a.css("background-image", "url(" + a.attr("data-pictogram") + ")")
  }), a.each(function() {
    $(this).css("background-image", "url(" + $(this).attr("data-pictogram") + ")")
  })
}

function animateFormLabels() {
  var a = $(".form-label"),
    b = ($(".upload-name"), $(".file"));
  a.each(function(a, b) {
    $(b).next(".form-field").on("focus", function() {
      $(b).addClass("is-focused")
    }), $(b).next(".form-field").on("focusout", function() {
      "" === $(this).val() && $(b).removeClass("is-focused")
    })
  }), b.each(function() {
    $(this).on("change", function() {
      var a = $(this).val().split(/(\\|\/)/g).pop();
      $(this).parents(".form-group").find(".upload-name").text(a)
    })
  })
}

function toggleHeightTxtArea() {
  var a = $("textarea");
  a.each(function() {
    $(this).focus(function() {
      $(this).animate({
        height: "80px"
      }, 200, function() {
        var a = $(this).parents(".jspScrollable");
        if (0 !== a.length) {
          var b = a.data("jsp");
          b && b.reinitialise()
        } else $(this).parents(".content-wrap").jScrollPane({
          contentWidth: "0px"
        })
      }), insideScrollableArea = !0
    }), $(this).blur(function() {
      0 === $(this).val().length && $(this).animate({
        height: "41px"
      }, 200, function() {
        var a = $(this).parents(".jspScrollable"),
          b = a.data("jsp");
        b && b.reinitialise()
      }), insideScrollableArea = !1
    })
  })
}

function initMap(a) {
  map = new google.maps.Map(document.getElementById("map"), {
    center: {
      lat: 21.033277,
      lng: 105.810195
    },
    zoom: a,
    scrollwheel: !0,
    disableDefaultUI: !0,
    draggable: !0,
    styles: [{
      featureType: "landscape.natural",
      elementType: "geometry.fill",
      stylers: [{
        hue: "#33404a"
      }]
    }, {
      featureType: "administrative",
      elementType: "geometry",
      stylers: [{
        visibility: "off"
      }]
    }, {
      featureType: "administrative.country",
      stylers: [{
        saturation: -5
      }]
    }, {
      featureType: "administrative.country",
      elementType: "geometry.stroke",
      stylers: [{
        visibility: "on"
      }]
    }, {
      featureType: "administrative.country",
      elementType: "labels",
      stylers: [{
        visibility: "off"
      }]
    }, {
      featureType: "administrative.locality",
      elementType: "labels",
      stylers: [{
        visibility: "off"
      }]
    }, {
      featureType: "landscape.natural",
      stylers: [{
        visibility: "simplified"
      }]
    }, {
      featureType: "landscape.natural.terrain",
      stylers: [{
        visibility: "off"
      }]
    }, {
      featureType: "poi",
      stylers: [{
        visibility: "off"
      }]
    }, {
      featureType: "poi",
      elementType: "labels.text",
      stylers: [{
        visibility: "off"
      }]
    }, {
      featureType: "road",
      stylers: [{
        visibility: "off"
      }]
    }, {
      featureType: "road",
      elementType: "labels",
      stylers: [{
        visibility: "off"
      }]
    }, {
      featureType: "road",
      elementType: "labels.icon",
      stylers: [{
        visibility: "off"
      }]
    }, {
      featureType: "transit",
      stylers: [{
        visibility: "off"
      }]
    }, {
      featureType: "water",
      elementType: "labels.text",
      stylers: [{
        visibility: "off"
      }]
    }]
  });
  var b = {
    hanoi: {
      position: {
        lat: 21.033277,
        lng: 105.810195
      },
      name: "Ha Noi",
      icon: {
        url: "img/map-marker.png",
        labelOrigin: new google.maps.Point(5, -10)
      }
    },
    sg: {
      position: {
        lat: 10.772202,
        lng: 106.688147
      },
      name: "Ho Chi Minh City",
      icon: {
        url: "img/map-marker.png",
        labelOrigin: new google.maps.Point(-3, 20)
      }
    },
    danang: {
      position: {
        lat: 16.080546,
        lng: 108.213454
      },
      name: "Da Nang",
      icon: {
        url: "img/map-marker.png",
        labelOrigin: new google.maps.Point(-3, 20)
      }
    }
  };
  ({
    url: "img/map-marker.png",
    labelOrigin: new google.maps.Point(10, 10)
  });
  for (var c in b) var d = new google.maps.Marker({
    position: b[c].position,
    icon: b[c].icon,
    label: b[c].name,
    clickable: !1,
    map: map
  })
}

function stopScrollOnMap() {
  $(document).mousemove(function(a) {
    insideScrollableArea = 0 != $("#map:hover").length
  })
}

function validateContactForm() {
  $contactForm.validate({
    ignore: ".ignore",
    rules: {
      submission_type: {
        required: !0
      },
      name: {
        required: !0,
        minlength: 2
      },
      email: {
        required: !0,
        email: !0
      },
      description: {
        required: !0
      },
      hiddenRecaptcha: {
        required: function() {
          return "" == grecaptcha.getResponse()
        }
      }
    }
  })
}

function validateNewsletterForm() {
  $("#newsletter-form").validate({
    rules: {
      email: {
        required: !0,
        email: !0
      }
    }
  })
}

function submitContact() {
  $contactForm.on("submit", function(a) {
    a.preventDefault();
    var b = $(this).serializeFormJSON();
    $(this).valid() && $.ajax({
      type: "POST",
      url: CONTACT_FORM_URL,
      data: JSON.stringify(b),
      contentType: "application/json"
    }).done(function(a) {
      var b = $("#contactFormResponse"),
        c = b.closest("form");
      c[0].reset(), $(".radio-card").removeClass("active"), $("label").removeClass("is-focused"), b.removeAttrs("class"), b.html(a.message), b.attr("class", a.class), grecaptcha.reset()
    })
  })
}

function generateEmailsContact() {
  var a = $(".mail-contact"),
    b = $(".mail-lyon"),
    c = $(".mail-paris");
  a.attr("href", "mailto:" + CONTACT_EMAIL + "@" + EMAIL_DOMAIN).html(CONTACT_EMAIL + "@" + EMAIL_DOMAIN), b.attr("href", "mailto:" + LYON_EMAIL + "@" + EMAIL_DOMAIN).html(LYON_EMAIL + "@" + EMAIL_DOMAIN), c.attr("href", "mailto:" + PARIS_EMAIL + "@" + EMAIL_DOMAIN).html(PARIS_EMAIL + "@" + EMAIL_DOMAIN)
}

function resizeToMobile() {
  setTimeout(function() {
    if (window.pJSDom instanceof Array && window.pJSDom.length > 0)
      for (var a = 0; a < window.pJSDom.length; a++) window.pJSDom[a].pJS.fn.vendors.destroypJS(), window.pJSDom = []
  }, 100), $main.css({
    height: "auto"
  }), setTimeout(function() {
    $sectionWrap.each(function() {
      $(this).css({
        height: "auto",
        width: "100%"
      });
      var a = $(this).find(".jspPane"),
        b = $(this).find(".jspContainer"),
        c = $(this).find(".jspVerticalBar");
      a.css({
        height: "auto",
        width: "100%"
      }), b.css({
        height: "auto",
        width: "100%"
      }), 0 !== c.length && c.css("display", "none")
    })
  }, 1e3), $landing.css({
    "-webkit-transform": "none",
    "-ms-transform": "none",
    "-moz-transform": "none",
    "-o-transform": "none",
    transform: "none",
    visibility: "visible",
    position: "relative",
    top: "auto",
    "bottom:": "auto",
    "z-index": "12"
  }), $left.each(function() {
    $(this).css({
      "-webkit-transform": "none",
      "-ms-transform": "none",
      "-moz-transform": "none",
      "-o-transform": "none",
      transform: "none",
      opacity: "1"
    })
  }), $right.each(function() {
    $(this).addClass("mobile").removeClass("fade-out").removeClass("fade-in")
  })
}

function mobileChangeScrollTop() {
  var a = 0,
    b = window.history,
    c = [],
    d = b.state;
  d ? c = b.state.split("/") : (b = window.location.pathname.split("/"), b[b.length - 1] && c.push(b[b.length - 1]));
  var e = $("[data-id=" + c[0] + "]");
  if (e.length > 0) {
    for (var f = e.index() + 1, g = 0; g < f; g++) a += $mobileSection.eq(g).outerHeight();
    window.scrollTo(0, a - menuHeight + 1)
  }
}

function mobileSectionCheckView(a) {
  var b = $(window).scrollTop() + menuHeight,
    c = a.offset().top,
    d = c + a.height();
  return a.is("#landing") ? d < b - menuHeight || c > b - menuHeight : d < b || c > b
}

function setFirstCurrent() {
  $mobileSection.first().addClass("current")
}

function mobileScrollNavigation() {
  $(window).on("touchmove scroll", function() {
    if ($(".current").length <= 0 && setFirstCurrent(), $(window).width() <= mobileBreakPoint && $(".current").length) {
      var a, b = $(".current"),
        c = $(this).scrollTop();
      if (c >= 0 && lastScrollTop >= 0) {
        var d = $mobileSection.index(b);
        c > lastScrollTop ? (a = b.next($mobileSection).attr("data-id"), mobileSectionCheckView(b) && (b.removeClass("current"), b = $mobileSection.eq(d + 1), b.addClass("current"))) : (a = b.prev($mobileSection).attr("data-id"), mobileSectionCheckView(b) && (b.removeClass("current"), b = $mobileSection.eq(d - 1), b.addClass("current")))
      }
      var e = b.attr("data-id");
      a !== e && void 0 !== a || window.history.pushState(e, "", e), lastScrollTop = c
    }
  })
}

function mobileNavigation(a) {
  if ($(window).width() <= mobileBreakPoint) {
    for (var b = $(".current"), c = 0, d = 0; d < a; d++) c += $mobileSection.eq(d).outerHeight(), 0 === a && (c += menuHeight);
    b.is($landing) || (c = c - menuHeight + 80), c = Math.floor(c), window.scrollTo(0, c), b.removeClass("current"), b = $mobileSection.eq(a), b.addClass("current"), window.history.pushState(b.attr("data-id"), "", b.attr("data-id")), lastScrollTop = c
  }
}

function mobileNavigateFromResize() {
  var a = 0;
  $left.each(function() {
    "0" === $(this).attr("offset") && (landingIsActive ? ($(this).parent().prev(".mobile-section").addClass("current"), a = $(this).parent().prev(".mobile-section").index()) : ($(this).parent().addClass("current"), a = $(this).parent().index()))
  }), setTimeout(function() {
    mobileNavigation(a)
  }, 200)
}

function mobileMenuNavigation() {
  $menuItemsWrap.off("click").on("click", ".menu-item", function() {
    var a = $("#_sections > section")[$(this).index()];
    window.history.pushState($(a).attr("data-id"), "", $(a).attr("data-id"));
    var b = $(this).index() + 1;
    return mobileNavigation(b), $menuOverlay.removeClass("disable-scroll"), $menu.removeClass("is-opened"), $menuOverlay.removeClass("is-opened"), $("body").removeClass("disable-scroll"), mobileToggleScroll(!1), !1
  })
}

function mobileBackNavigation() {
  var a = $("#main-menu .mobile-back-button");
  a.off("click").on("click", function() {
    var a = $(".current"),
      b = $mobileSection.index(a) - 1;
    return b > 0 && mobileNavigation(b), !1
  })
}

function mobileBecomeClient() {
  var a = mobileNumberOfSections - 1,
    b = $("#become-client .content-button"),
    c = $(".section-detail.client .content-button");
  b.on("click", function() {
    return mobileNavigation(a), !1
  }), c.on("click", function() {
    return mobileNavigation(a), !1
  })
}

function routesFunctionality() {
  function a() {
    var a = $("#_sections > section"),
      b = $('[data-id="' + c[0] + '"]'),
      d = b.index();
    if ($(window).width() > mobileBreakPoint) changeLeftSection(0, d), changeScrollProgress(0, d), scrollUpLanding();
    else {
      a = $(".mobile-section");
      var e = 0;
      a.each(function() {
        $(this).attr("data-id") === c[0] && (b = $(this), d = e), e++
      }), setTimeout(function() {
        var a = b.offset().top;
        $htmlBody.animate({
          scrollTop: a
        }, 1200)
      }, 100)
    }
  }
  var b = window.history,
    c = [],
    d = b.state;
  switch (d ? c = b.state.split("/") : (b = window.location.pathname.split("/"), b[b.length - 1] && c.push(b[b.length - 1])), c.length) {
    case 0:
      break;
    case 1:
      a()
  }
}

function facebookShare() {
  $(".facebook.icons").click(function(a) {
    a.preventDefault();
    var b = window.history.state,
      c = "PitechPlus - Engineered to Evolve",
      d = "means to put human relationships before devices, teamwork above one sided guidelines,and viable adjustments over strict plans. You will discover this when you partner with us.";
    if (void 0 !== b) {
      var e = $("[data-id=" + b + "]");
      c = e.find("h1").text(), d = "PitechPlus - Engineered to Evolve"
    }
    FB.ui({
      method: "share",
      href: window.location.href,
      title: c,
      picture: window.location.origin + "/img/share_img.png",
      description: d,
      caption: "PitechPlus",
      name: c
    })
  })
}
var BASE_URL = "http://localhost:3000",
  SECTIONS_URL = "data/sections.json",
  SECTIONDETAILS_URL = "data/sections-detail.json",
  SECTIONMEDIA = "data/media.json",
  MEDIA_SECTION = [],
  SECTIONS_DETAILS = [];
getData(SECTIONDETAILS_URL).then(setPopups, function(a) {
    console.error("Failed!", a)
  }),
  function(a) {
    a.fn.serializeFormJSON = function() {
      var b = {},
        c = this.serializeArray();
      return a.each(c, function() {
        b[this.name] ? (b[this.name].push || (b[this.name] = [b[this.name]]), b[this.name].push(this.value || "")) : b[this.name] = this.value || ""
      }), b
    }
  }(jQuery);
var RECAPTCHA_SITE_KEY = "6LdykzEUAAAAAG7AVRXUcJLFFF7RdnANfsebq74m",
  FB_APP_ID = "1856031038006908",
  WS_BASE = "https://pitechbo.pitechplus.com/",
  CONTACT_FORM_URL = WS_BASE + "rest/contact-submissions?_format=json",
  NEWSLETTER_FORM_URL = WS_BASE + "rest/newsletter?_format=json",
  EMAIL_DOMAIN = "itc.com.vn",
  CONTACT_EMAIL = "info",
  PARIS_EMAIL = "paris",
  LYON_EMAIL = "lyon",
  $htmlBody = $("html, body"),
  $main = $("#main"),
  $left = $(".left"),
  numberOfSections = $left.length,
  duration = 1200,
  landingIsActive = !0,
  changingSection = !1,
  $landing = $("#landing"),
  $landingTitle = $("#landing div.center"),
  $landingButton = $("#landing .scroll-down-button"),
  $right = $(".right"),
  $rightOverlay = $("#animated-image-overlay"),
  $sectionWrap = $(".left .content-wrap"),
  $sliderSelector = $(".slider"),
  $mainMenu = $("#main-menu"),
  $menu = $("#slide-menu"),
  $menuOverlay = $("#menu-overlay"),
  $menuItemsWrap = $("#menu-items"),
  $openMenuButton = $("#main-menu .open-menu-button"),
  $closeMenuButton = $("#slide-menu .close-menu-button"),
  $scrollBar = $("#scroll-progress"),
  scrollTranslateValX = -$scrollBar.outerWidth(),
  $openSectionDetail = $(".open-section-detail"),
  $closeSectionDetail = $(".close-section-detail"),
  $closeJob = $(".job .close-section-detail"),
  $sectionDetail = $(".section-detail"),
  $sectionDetailWrap = $(".section-detail-wrap"),
  $sectionDetailContent = $(".section-content"),
  $firstSection = $("#_sections").find(">section").first(),
  $mobileSection = $(".mobile-section"),
  mobileNumberOfSections = $mobileSection.length,
  menuHeight = $("#main-menu").outerHeight(),
  lastScrollTop = $(window).scrollTop(),
  sectionScrollTop = null,
  insideScrollableArea = !1,
  mobileBreakPoint = 1024,
  windowHeight = $(window).outerHeight(),
  scrolling = !1,
  $contactForm = $("#contact-form"),
  $openApplyJob = $(".job .call-to-action .content-button"),
  isFirefox = navigator.userAgent.toLowerCase().indexOf("firefox");
$(document).on("allRenderDone", function() {
  window.history.scrollRestoration = "manual", window.scrollTo(0, 0), $htmlBody = $("html, body"), $main = $("#main"), $left = $(".left"), numberOfSections = $left.length, duration = 1200, landingIsActive = !0, changingSection = !1, $landing = $("#landing"), $landingTitle = $("#landing div.center"), $landingButton = $("#landing .scroll-down-button"), $right = $(".right"), $rightOverlay = $("#animated-image-overlay"), $sectionWrap = $(".left .content-wrap"), $sliderSelector = $(".slider"), $mainMenu = $("#main-menu"), $menu = $("#slide-menu"), $menuOverlay = $("#menu-overlay"), $menuItemsWrap = $("#menu-items"), $openMenuButton = $("#main-menu .open-menu-button"), $closeMenuButton = $("#slide-menu .close-menu-button"), $scrollBar = $("#scroll-progress"), scrollTranslateValX = -$scrollBar.outerWidth(), $openSectionDetail = $(".open-section-detail"), $closeSectionDetail = $(".close-section-detail"), $closeJob = $(".job .close-section-detail"), $sectionDetail = $(".section-detail"), $sectionDetailWrap = $(".section-detail-wrap"), $sectionDetailContent = $(".section-content"), $firstSection = $("#_sections").find(">div").first(), $mobileSection = $(".mobile-section"), mobileNumberOfSections = $mobileSection.length, menuHeight = $("#main-menu").outerHeight(), lastScrollTop = $(window).scrollTop(), sectionScrollTop = null, insideScrollableArea = !1, mobileBreakPoint = 1024, windowHeight = $(window).outerHeight(), scrolling = !1, $contactForm = $("#contact-form"), $openApplyJob = $(".job .call-to-action .content-button"), isFirefox = navigator.userAgent.toLowerCase().indexOf("firefox");
  var a = $(window).width();
  landingFadeIn(), openMainMenu(), closeMainMenu(), openSection(), closeSection(), addScrollBarToSectionDetail(), addDotOurStory(), animateFormLabels(), sliders(), radioButtons(), hoverPictograms(), toggleHeightTxtArea(), validateContactForm(), submitContact(), facebookShare(), showNewsletter(), submitNewsletter(), validateNewsletterForm(), generateEmailsContact(), $(window).width() > mobileBreakPoint ? (particles(), setInitialPositions(), changeLanding(), scrollWheel(), scrollTouch(), initScrollProgress(), setContentHeight(), resizeRecalculateTranslate(), addScrollBarToSection(), menuNavigation(), becomeClientNavigation(), nextSectionButton()) : (setFirstCurrent(), mobileScrollNavigation(), mobileMenuNavigation(), mobileBecomeClient(), mobileBackNavigation(), iOSMenuDisableScroll()), $(window).on("resize", _.throttle(function(b) {
    var c = $(window).width();
    c > mobileBreakPoint && a <= mobileBreakPoint ? (scrollWheel(), scrollTouch(), particles(), resizeToDesktop(), changeLanding(), setContentHeight(), resizeRecalculateTranslate(), addScrollBarToSection(), nextSectionButton(), menuNavigation(), becomeClientNavigation()) : c <= mobileBreakPoint && (a > mobileBreakPoint ? (resizeToMobile(), mobileNavigateFromResize(), mobileScrollNavigation(), mobileMenuNavigation(), mobileBecomeClient(), mobileBackNavigation(), iOSMenuDisableScroll()) : c !== a && mobileChangeScrollTop()), a = c
  }, 500)), routesFunctionality()
}), $(window).on("load", function() {
  stopScrollOnMap(), initMap($(window).width() > mobileBreakPoint ? 5 : 4)
}), $(document).on("allRenderDone", function() {});